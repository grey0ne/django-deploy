name: ${PROJECT_NAME}

services:
  django:
    domainname: ${PROJECT_NAME}-django
    image: ${PROJECT_NAME}-django
    container_name: ${PROJECT_NAME}-django
    build:
      context: ${PROJECT_DIR}/backend
    env_file:
      - ${PROJECT_DIR}/environment/env.base
      - ${PROJECT_DIR}/environment/env.dev
    volumes:
      - ${PROJECT_DIR}/backend:/app/src
      - ${PROJECT_DIR}/backend_data:/app/backend_data
    depends_on:
      - postgres
    networks:
      - app
      - devnet

  nextjs:
    image: ${PROJECT_NAME}-nextjs
    container_name: ${PROJECT_NAME}-nextjs
    domainname: ${PROJECT_NAME}-nextjs
    build:
      context: ${PROJECT_DIR}/spa
      dockerfile: ${PROJECT_DIR}/deploy/docker/Dockerfile.nextjsdev
    env_file:
      - ${PROJECT_DIR}/environment/env.base
      - ${PROJECT_DIR}/environment/env.dev
    volumes:
      - ${PROJECT_DIR}/spa:/app
    networks:
      - app
      - devnet

  minio:
    command: server /data --console-address ":9001"
    image: "minio/minio:RELEASE.2025-09-07T16-13-09Z"
    container_name: ${PROJECT_NAME}-minio
    domainname: ${PROJECT_NAME}-minio
    environment:
      MINIO_ROOT_USER: ${PROJECT_NAME}_minio
      MINIO_ROOT_PASSWORD: ${PROJECT_NAME}_minio
    volumes:
      - minio-data:/data
    networks:
      - app
      - devnet


  postgres:
    image: "postgres:16.4-alpine"
    container_name: ${PROJECT_NAME}-postgres
    domainname: ${PROJECT_NAME}-postgres
    environment:
      POSTGRES_PASSWORD: ${PROJECT_NAME}
      POSTGRES_USER: ${PROJECT_NAME}
      POSTGRES_DB: ${PROJECT_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app

  celery:
    image: ${PROJECT_NAME}-django
    domainname: ${PROJECT_NAME}-celery
    container_name: ${PROJECT_NAME}-celery
    command: celery --app application.celeryapp worker -E -l info
    volumes:
      - ${PROJECT_DIR}/backend:/app/src
    env_file:
      - ${PROJECT_DIR}/environment/env.base
      - ${PROJECT_DIR}/environment/env.dev
    networks:
      - app
      - devnet
    profiles:
      - celery

  centrifugo:
    image: "centrifugo/centrifugo:v6.2"
    container_name: ${PROJECT_NAME}-centrifugo
    domainname: ${PROJECT_NAME}-centrifugo
    command: centrifugo
    env_file:
      - ${PROJECT_DIR}/environment/env.base
      - ${PROJECT_DIR}/environment/env.dev
    networks:
      - app
      - devnet
    profiles:
      - centrifugo

  redis:
    image: "redis:8.2.2-alpine"
    container_name: ${PROJECT_NAME}-redis
    domainname: ${PROJECT_NAME}-redis
    volumes:
      - redis-data:/data
    networks:
      - app
      - devnet
    profiles:
      - celery
      - centrifugo

volumes:
  postgres-data:
    driver: local
    name: ${PROJECT_NAME}-postgres-data
  minio-data:
    driver: local
    name: ${PROJECT_NAME}-minio-data
  redis-data:
    driver: local
    name: ${PROJECT_NAME}-redis-data


networks:
  app:
    name: ${PROJECT_NAME}
  devnet:
    name: devnet
    external: true
